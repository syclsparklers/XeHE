# -*- coding: utf-8 -*-
#
# Configuration file for the Sphinx documentation builder.
#
# This file does only contain a selection of the most common options. For a
# full list see the documentation:
# http://www.sphinx-doc.org/en/master/config

# -- Path setup --------------------------------------------------------------

# If extensions (or modules to document with autodoc) are in another directory,
# add these directories to sys.path here. If the directory is relative to the
# documentation root, use os.path.abspath to make it absolute, like shown here.
#
# import os
# import sys
# sys.path.insert(0, os.path.abspath('.'))


# -- Project information -----------------------------------------------------

project = 'Sparkler-XeHE.v001'
copyright = '2023, Codeplay'
author = 'Alexander Lyashevsky, Alexey Titov, Yiqin Qiu, and Yujia Zhai'

# The short X.Y version
version = '1.0'
# The full version, including alpha/beta/rc tags
release = ''

# Without this setting, you should see a message when running sphinx-build that says "WARNING: numfig is disabled. :numref: is ignored".
numfig = True

# -- General configuration ---------------------------------------------------

# If your documentation needs a minimal Sphinx version, state it here.
#
# needs_sphinx = '1.0'

# Add any Sphinx extension module names here, as strings. They can be
# extensions coming with Sphinx (named 'sphinx.ext.*') or your custom
# ones.
extensions = [
    'sphinx.ext.imgmath',
]

# Add any paths that contain templates here, relative to this directory.
templates_path = ['_templates']

# The suffix(es) of source filenames.
# You can specify multiple suffix as a list of string:
#
# source_suffix = ['.rst', '.md']
source_suffix = '.rst'

# The master toctree document.
master_doc = 'index'

# The language for content autogenerated by Sphinx. Refer to documentation
# for a list of supported languages.
#
# This is also used if you do content translation via gettext catalogs.
# Usually you set "language" from the command line for these cases.
language = None

# List of patterns, relative to source directory, that match files and
# directories to ignore when looking for source files.
# This pattern also affects html_static_path and html_extra_path.
exclude_patterns = []

# The name of the Pygments (syntax highlighting) style to use.
pygments_style = None


# -- Options for HTML output -------------------------------------------------

# The theme to use for HTML and HTML Help pages.  See the documentation for
# a list of builtin themes.
#
html_theme = 'alabaster'

# Theme options are theme-specific and customize the look and feel of a theme
# further.  For a list of options available for each theme, see the
# documentation.
#
# html_theme_options = {}

# Add any paths that contain custom static files (such as style sheets) here,
# relative to this directory. They are copied after the builtin static files,
# so a file named "default.css" will overwrite the builtin "default.css".
html_static_path = ['_static']

# Custom sidebar templates, must be a dictionary that maps document names
# to template names.
#
# The default sidebars (for documents that don't match any pattern) are
# defined by theme itself.  Builtin themes are using these templates by
# default: ``['localtoc.html', 'relations.html', 'sourcelink.html',
# 'searchbox.html']``.
#
# html_sidebars = {}


# -- Options for HTMLHelp output ---------------------------------------------

# Output file base name for HTML help builder.
htmlhelp_basename = 'Sparkler-XeHEdoc'


# -- Options for LaTeX output ------------------------------------------------

fh = open('latex_preamble.tex', 'r+')
PREAMBLE = fh.read()
fh.close()

latex_toplevel_sectioning = 'section'
latex_show_pagerefs=1
latex_show_urls='footnote'
latex_add_secnumbers=0


latex_elements = {
    # The paper size ('letterpaper' or 'a4paper').
    #
    'papersize': 'a5paper',

    # The font size ('10pt', '11pt' or '12pt').
    #
    'pointsize': '10pt',

    # Additional stuff for the LaTeX preamble.
    #
     'preamble': PREAMBLE,

    # Additional stuff for the LaTeX preamble.
    #
    'printindex': r'\MyPrintIndexAndBackCover',

    # Latex figure (float) alignment
    #
    # 'figure_align': 'htbp',
}

# Grouping the document tree into LaTeX files. List of tuples
# (source start file, target name, title,
#  author, documentclass [howto, manual, or own class]).
latex_documents = [
    (master_doc, 'Sparkler-XeHE.v001.tex', 'SYCL Sparkler: XeHE Homomorphic Encryption Library',
     'Alexander Lyashevsky, Alexey Titov, Yiqin Qiu, and Yujia Zhai', 'book'),
]


# -- Options for manual page output ------------------------------------------

# One entry per manual page. List of tuples
# (source start file, name, description, authors, manual section).
man_pages = [
    (master_doc, 'Sparkler-XeHE.v001', 'SYCL Sparkler: XeHE Homomorphic Encryption Library',
     'Alexander Lyashevsky, Alexey Titov, Yiqin Qiu, and Yujia Zhai', 1)
]


# -- Options for Texinfo output ----------------------------------------------

# Grouping the document tree into Texinfo files. List of tuples
# (source start file, target name, title, author,
#  dir menu entry, description, category)
texinfo_documents = [
    (master_doc, 'Sparkler-XeHE.v001', 'SYCL Sparkler: XeHE Homomorphic Encryption Library',
     'Alexander Lyashevsky, Alexey Titov, Yiqin Qiu, and Yujia Zhai', 'Sparkler-XeHE.v001', 'An Intel GPU accelerated fully homomorphic encryption library written in C++ with SYCL.',
     'Miscellaneous'),
]


# -- Options for Epub output -------------------------------------------------

# documentation for these options is at https://www.sphinx-doc.org/en/master/usage/configuration.html
epub_basename = 'Sparkler-XeHE.v001' # The basename for the epub file.
# epub_theme # The HTML theme for the epub output. This defaults to 'epub', a theme designed to save visual space.
# epub_theme_options # A dictionary of options that influence the look and feel of the selected theme. These are theme-specific. https://www.sphinx-doc.org/en/master/usage/theming.html#builtin-themes
## relbar1 (true or false, default True): If this is true, the relbar1 block is inserted in the epub output, otherwise it is omitted.
## footer (true or false, default True): If this is true, the footer block is inserted in the epub output, otherwise it is omitted.
epub_title = 'XeHE: An Intel GPU Accelerated Fully Homomorphic Encryption Library' # The title of the document.
epub_description = 'XeHE: An Intel GPU Accelerated Fully Homomorphic Encryption Library' # The description of the document.
epub_author = 'Alexander Lyashevsky, Alexey Titov, Yiqin Qiu, and Yujia Zhai' # The author of the document.
epub_contributor = 'James Reinders, Henry Gabb, John Pennycook' # The name of a person, organization, etc. that played a secondary role in the creation of the content of an EPUB Publication.
# epub_language = 'en' # The language of the document. This is put in the Dublin Core metadata. The default is the language option or 'en' if unset.
# epub_publisher # The publisher of the document.
epub_copyright = '2023, Codeplay' # The copyright of the document.
epub_identifier = '979-8-88638-001-9' # For published documents this is the ISBN number
epub_scheme = 'ISBN' # For published books the scheme is 'ISBN'.
# epub_uid = '' # A unique identifier for the document.
epub_cover = ('_static/Sparkler-XeHE-cover.jpg', '')
# epub_css_files # A list of CSS files. The entry must be a filename string or a tuple containing the filename string and the attributes dictionary. For more information, see html_css_files.
# epub_guide # Meta data for the guide element of content.opf. This is a sequence of tuples containing the type, the uri and the title of the optional guide information. See the OPF documentation at http://idpf.org/epub for details. If possible, default entries for the cover and toc types are automatically inserted. However, the types can be explicitly overwritten if the default entries are not appropriate. Example:
## CAUSES MANY FAILURE - BUGGY ## epub_pre_files = [ ( 'frontmatter.xhtml', 'Frontmatter' ) ] # Additional files that should be inserted before the text generated by Sphinx. It is a list of tuples containing the file name and the title. If the title is empty, no entry is added
# epub_post_files # Additional files that should be inserted after the text generated by Sphinx. It is a list of tuples containing the file name and the title. This option can be used to add an appendix. If the title is empty, no entry is added to toc.ncx. The default value is [].
# epub_exclude_files # A list of files that are generated/copied in the build directory but should not be included in the epub file. The default value is [].
# epub_tocdepth # The depth of the table of contents in the file toc.ncx. It should be an integer greater than zero. The default value is 3. Note: A deeply nested table of contents may be difficult to navigate.
# epub_tocdup # This flag determines if a toc entry is inserted again at the beginning of its nested toc listing. This allows easier navigation to the top of a chapter, but can be confusing because it mixes entries of different depth in one list. The default value is True.
# epub_tocscope # This setting control the scope of the epub table of contents. The setting can have the following values: 'default' or 'includehidden'
epub_fix_images = True # This flag determines if sphinx should try to fix image formats that are not supported by some epub readers. At the moment palette images with a small color table are upgraded. You need Pillow, the Python Image Library, installed to use this option. The default value is False because the automatic conversion may lose information.
epub_max_image_width = 1080 # This option specifies the maximum width of images. If it is set to a value greater than zero, images with a width larger than the given value are scaled accordingly. If it is zero, no scaling is performed. The default value is 0. You need the Python Image Library (Pillow) installed to use this option.
# epub_show_urls # Control whether to display URL addresses. 'inline' (default); 'footnote'; 'no'
epub_use_index = True # If true, add an index to the epub document.
# epub_writing_mode # It specifies writing direction. It can accept 'horizontal' (default) and 'vertical'

# -- Extension configuration -------------------------------------------------
